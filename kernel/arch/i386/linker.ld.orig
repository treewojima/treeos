/* Symbol to use as the entry point for the kernel executable */
ENTRY(_start)

/* Virtual memory/higher half offsets */
KERNEL_BOOT_VMA = 0x0010000;

/* Tell where the various sections of the object files will be put in the final
 * kernel image. */
SECTIONS
{
    /* Start off at the low physical address */
    . = KERNEL_BOOT_VMA;
    g_kernel_start = . ;

    /* Multiboot header and .text */
    .text :
    {
        *(.multiboot)
        *(.text)
    }

    /* Read-only data */
    .rodata : ALIGN(0x1000)
    {
        *(.rodata)
    }

    /* Read-write data (initialized) */
    .data : ALIGN(0x1000)
    {
        *(.data)
    }

    /* Read-write data (uninitialized) and stack */
    /*.bss BLOCK(0x1000) : ALIGN(0x1000)*/
    .bss : ALIGN(0x1000)
    {
        g_bss_start = . ;
        
        *(COMMON)
        *(.bss)
        *(.bootstrap_stack)

        /* Align/pad to the nearest 4K page boundary */
        . = ALIGN(0x1000);
        g_bss_end = . ;
    }

    /* Page alignment is guaranteed for this symbol */
    g_kernel_end = . ;
}
